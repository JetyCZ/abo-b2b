# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
    browser-tools: circleci/browser-tools@1.1.3
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      # get server up and running in the background
      - run:
          command: gradle bootRun
          background: true
      # wait for the server to start responding. We expect Bad Request 400 once it starts listening.
      # so override the shell and have the last command be the : { null } command to force exit code 0.
      - run:
          shell: /bin/sh
          command: |
            wget --retry-connrefused --waitretry=1 --timeout=200 -t 1000 http://localhost:8080
            :

      - run: gradle test
      - store_test_results:
          path: ./test-results
      - store_artifacts:
          path: ./test-results
      - store_test_results:
          path: ./build/test-results
      - store_artifacts:
          path: ./build/test-results

      - run: gradle -stop